#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <time.h>

int main() {
    int server_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (server_socket == -1) {
        perror("Error creating socket");
        return 1;
    }

    struct sockaddr_in server_addr;
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = INADDR_ANY;
    server_addr.sin_port = htons(8443); // You can choose any available port

    if (bind(server_socket, (struct sockaddr *)&server_addr, sizeof(server_addr)) == -1) {
        perror("Error binding");
        close(server_socket);
        return 1;
    }
    if (listen(server_socket, 1) == -1) {
        perror("Error listening");
        close(server_socket);
        return 1;
    }

    printf("Server is listening...\n");
    struct sockaddr_in client_addr;
    socklen_t client_addr_len = sizeof(client_addr);
    int client_socket = accept(server_socket, (struct sockaddr *)&client_addr, &client_addr_len);
    if (client_socket == -1) {
        perror("Error accepting connection");
        close(server_socket);
        return 1;
    }

    printf("Client connected\n");
    srand(time(NULL)); // Seed the random number generator with the current time
    int random_number = rand() % 900 + 100;
    send(client_socket, &random_number, sizeof(random_number), 0);

    printf("Random number sent: %d\n", random_number);
    close(client_socket);
    close(server_socket);

    return 0;
}
